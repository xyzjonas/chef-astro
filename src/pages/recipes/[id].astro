---
import Pin from '../../components/Pin.astro';
import IngredientItem from '../../components/IngredientItem.astro'
import EmptySection from '../../components/EmptySection.astro'
import Link from '../../components/Link.astro'

import RecipeLayout from '../../layouts/RecipeLayout.astro';
import { getRecipes, getRecipe } from '../../singleton';
import type { Recipe } from '../../types';
import { mediumImage, BASE_URL } from '../../utils/links';

export async function getStaticPaths() {

    const recipes = await getRecipes();

    return recipes.map((r: Recipe) => {
        return { params: { id: r.id } }
    })
};

const { id } = Astro.params;
const recipe: Recipe = await getRecipe(parseInt(`${id}`))

// return Astro.redirect('/404');

const thumbUrl = mediumImage(recipe.id)

---
<RecipeLayout title={recipe.title}>
<section class="summary">
    
    <div class="summary-image">
        <img src={thumbUrl}>
        <div class="summary-image-gradient"></div>
    </div>
    <div class="summary-title">
        <h1>{recipe.title}</h1>
        <h2>{recipe.subtitle}</h2>
        <div class="summary-title-pins">
            {recipe.tags.map(t => (
                <Pin name={t.name} />
            ))}
        </div>
    </div>
</section>

<section class="buttons" style="margin-bottom: 12px;">
{ 
    recipe.source &&
    <Link text={recipe.source_name ?? recipe.source} icon='link' href={recipe.source} />
}
</section>

<section class="buttons">
    <Link text="Back" icon='reply' newTab={false} href="/" />
    <Link text="Edit" icon="edit" newTab={true} href={`${BASE_URL}/#/recipes/${recipe.id}`} />
</section>

<section class="ingredients-content">
    <h4 style="margin-bottom: 0;">{recipe.ingredients.length} INGREDIENTS</h4>
    <ul class="ingredients-list">
        {recipe.ingredients.map(ing => (
            <IngredientItem ingredientItem={ing} />
        ))}
    </ul>
</section>

<section class="content">
    <Fragment set:html={recipe.body} />
    { recipe.body ? '' : <EmptySection title='Recipe not written yet...' subtitle="Don't be lazy!" /> }
</section>

</RecipeLayout>

<style lang="scss" define:vars={{ thumbUrl }}>
@use "../../styles/bp";

.pins-row {
    display: flex;
    flex-direction: row;
    gap: 8px;
}
.summary {

    display: flex;
    gap: 32px;
    flex-wrap: wrap;
    justify-content: center;
    position: relative;

    &-title {
        align-self: center;
        text-align: center;
        margin-top: 12px;
        margin-bottom:12px;
        font-family: serif;

        &-pins {
            display: flex;
            gap: 8px;
            flex-wrap: wrap;
            justify-content: center;
        }

        &-items {
            margin-top: 12px;
            display: flex;
            flex-direction: row;
            justify-content: center;

            p {
                padding: 0 8px;
                border-right: 1px solid var(--border-color);
            }

            :last-child {
                border: none;
            }
        }
    }

    &-image {
        position: relative;
        &-gradient {
            width: 100%;
            height: 50%;
            background-image: linear-gradient(to bottom, transparent 0%, var(--background) 90%);
            position: absolute;
            display: none;
            top: 50%;

            @include bp.for-phone-only {
                display: block;
            }
        }
        img {
            border-radius: 50%;
            width: 320px;
            margin-top: 24px;

            @include bp.for-phone-only {
                margin-top: 0;
                border-radius: 0;
                width: 100%;
                max-width: 100%;
                mask-image: linear-gradient(to bottom, rgba(0,0,0,0) 0%,rgba(0,0,0,0.65) 100%);
                -webkit-mask-image: linear-gradient(to bottom, blue 1%, red 100%);
            }
        }
    }

    h1, h2 {
        margin: 0;
    }
    h1 {
        font-size: xx-large;
        font-family: 'Staatliches', cursive;
        text-transform: uppercase;
    }
    h2 {
        color: gray;
    }

}

.ingredients-content {
    border: 1px solid var(--border-color);
    margin: 1em;
    ul {
        padding: 0;
    }
}


.content, .buttons, .ingredients-content {
    padding: 0 1em;
}

.content {
    text-overflow: ellipsis ["-----"];
    overflow: hidden;
}

.buttons {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: 1em;
}

ul {
    &:first-child {
        background-color: red;
    }
    li {
        background-color: red;
    }
}

a {
    margin-left: 12px;
    color: var(--font-color);
}

</style>